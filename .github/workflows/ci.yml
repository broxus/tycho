name: CI # Continuous Integration

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - "**"
    paths:
      - "Cargo.toml"
      - "Cargo.lock"
      - "**.rs"
env:
  CARGO_TERM_COLOR: always
jobs:
  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: rustfmt
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Clang
        run: sudo apt-get update && sudo apt-get install -y clang
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - name: Cache dependencies
        uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Test with latest nextest release
        uses: actions-rs/cargo@v1
        env:
          RUST_LOG: warn
        with:
          command: nextest
          args: run -p tycho-block-util -p tycho-core -p tycho-network -p tycho-rpc -p tycho-storage -p tycho-consensus -p tycho-util -p tycho-collator -p tycho-control
  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true
          components: rustfmt
      - name: Check formatting
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
  metrics:
    name: Metrics
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
      - name: check dashboard
        run: python scripts/check-metrics.py
  cli-builds: # replace later with clippy
    name: tycho-cli check
    runs-on: ubuntu-latest
    needs: rustfmt
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Clang
        run: sudo apt-get update && sudo apt-get install -y clang
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Build CLI
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: -p tycho-cli

  clippy:
    name: Clippy
    needs: rustfmt
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Install Clang
        run: sudo apt-get update && sudo apt-get install -y clang
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          components: clippy
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
      - name: Clippy check
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --all-targets --all-features -p tycho-block-util -p tycho-core -p tycho-network -p tycho-rpc -p tycho-storage -p tycho-consensus -p tycho-util -p tycho-collator -p tycho-control -- -D warnings # change to --workspace later

  check-protos:
    name: Check protos
    if: |
      contains(github.event.pull_request.files.*.path, '.proto') ||
      (github.event_name == 'push' && contains(join(github.event.commits.*.added, github.event.commits.*.modified), '.proto'))
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Install protobuf
        run: sudo apt update && sudo apt-get -y install protobuf-compiler
      - name: Generate Rust code from .proto files
        run: cargo run -p tycho-gen-protos
      - name: Check for uncommitted changes
        run: git diff --exit-code

  # docs:
  #   name: Docs
  #   needs: clippy
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2
  #     - name: Install Clang
  #       run: sudo apt-get update && sudo apt-get install -y clang
  #     - name: Install Rust toolchain
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         toolchain: stable
  #         profile: minimal
  #         override: true
  #     - uses: Swatinem/rust-cache@v2
  #     - name: Check documentation
  #       env:
  #         RUSTDOCFLAGS: -D warnings
  #       uses: actions-rs/cargo@v1
  #       with:
  #         command: doc
  #         args: --no-deps --document-private-items --all-features --workspace
