name: Network Tests

on:
  merge_group:
    branches: [master]
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CARGO_TERM_COLOR: always
  CC: /usr/bin/clang
  CXX: /usr/bin/clang++
  TYCHO_BUILD_PROFILE: release_check

jobs:
  pre-build:
    name: Pre-build Project Cache (Release Check)
    runs-on: [self-hosted, linux]
    if: github.event_name == 'merge_group'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize Environment (for Build)
        uses: ./.github/actions/init
        with:
          setup-cache: true

      - name: Pre-build Project (Release Check)
        shell: bash
        run: |
          echo "Building release_check profile..."
          just build

  # This job depends on pre-build, so it also effectively only runs on merge_group
  network-tests:
    name: Network Integration Tests - ${{ matrix.test_name }}
    runs-on: [self-hosted, linux]
    # Add the 'if' condition here too for clarity and robustness
    # It prevents the job from even starting if pre-build is skipped (on PR)
    if: github.event_name == 'merge_group'
    needs: pre-build # Makes this job wait for pre-build AND implicitly skip if pre-build skips
    timeout-minutes: 30
    strategy:
      fail-fast: true
      matrix:
        include:
          - test_name: destroyable
            test_image: ghcr.io/broxus/tycho-tests/tycho-tests-destroyable:latest
          - test_name: ping-pong
            test_image: ghcr.io/broxus/tycho-tests/tycho-tests-ping-pong:latest
          - test_name: one-to-many-internal-messages
            test_image: ghcr.io/broxus/tycho-tests/tycho-tests-one-to-many-internal-messages:latest
          - test_name: fq-deploy
            test_image: ghcr.io/broxus/tycho-tests/tycho-tests-fq:latest
          - test_name: nft-index
            test_image: ghcr.io/broxus/tycho-tests/tycho-tests-nft-index:latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Initialize Environment
        uses: ./.github/actions/init
        with:
          setup-cache: true
          fake-procfs: true

      - name: Login to GHCR
        shell: bash
        run: |
          set -e
          echo "${{ secrets.GHCR_TOKEN }}" | podman login ghcr.io -u ${{ secrets.GHCR_USER }} --password-stdin

      - name: Run network tests
        shell: bash
        run: ./scripts/run-network-tests.sh ${{ matrix.test_image }}